/**
* Name: FestivalModel
* Based on the internal empty template. 
* Author: Zidi Chen, Sihan Chen
* Tags: 
*/


model FestivalModel

global
{
	int number_of_guests<-10;
	int number_of_stores<-4;
	int number_of_infoCenter<-1;
	init{
		create Guests number:number_of_guests;
		create Store number:number_of_stores;
		create InformationCenter number:number_of_infoCenter{
			location <- {50, 50};
		}
		
	}
	
}

species Guests skills:[moving]
{
	point targetPoint<-nil;
	point infoCenter<-{50,50};
	int thirst<-rnd(100);
	int hunger<-rnd(100);
	
	
	reflex beIdle when:targetPoint = nil
	{
		do wander;
	}
	
	reflex gotoInfoCenter when:(hunger > 50 or thirst >50) and targetPoint = nil{
		do goto target:infoCenter;
		ask InformationCenter at_distance 2{
			if(myself.thirst > 50){
				int i <- rnd(length(self.bars) - 1);
				myself.targetPoint <- self.bars[i];
				write myself.targetPoint;
				
			}else if(myself.hunger > 50){
				int i <- rnd(length(self.restaurants) - 1);
				myself.targetPoint <- self.restaurants[i];
				write myself.targetPoint;
			}
			
		}
	}
	
	reflex moveToTarget when:targetPoint != nil
	{
		do goto target:targetPoint;
	}
	
	reflex enterStore when:targetPoint != nil and location distance_to(targetPoint) < 2
	{
		targetPoint <- nil;
		if (self.thirst > 50) {
				self.thirst <- 0;
			} else {
				self.hunger <- 0;
			}
		
	}
	
	aspect base{
		draw sphere(2) color: #yellow;
		
	}
	
}

species Store 
{
	bool sellDrink<-nil;
	bool sellFood<-nil;
	
	//randomly decide this store to sell drink or food
	init{
		sellDrink <- flip(0.5);
		if(sellDrink = false){
			sellFood<-true;
		}
		
	}
	
	aspect base{
		draw cube(8) color: (sellDrink)? #blue: #green;
		
	}
	
}



species InformationCenter 
{
	
	list<Store> restaurants <- nil;
	list<Store> bars <- nil;
	
	init {
		ask Store {
			if(self.sellDrink = true){
				myself.bars << self;
			}else if(self.sellFood = true){
				myself.restaurants<<self;
				
			}	
		} 

	}
	
	aspect base{
		draw pyramid(15) color: #red;
		
	}
	
}

experiment main type:gui
{
	output
	{
		display map type:opengl
		{
			species Guests aspect:base;
			species Store aspect:base;
			species InformationCenter aspect:base;
			
		}
	}
	
}